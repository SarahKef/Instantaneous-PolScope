function setupRTFPPropertyGrid(hPG,RTFPObject,paramsN,paramsR)
% Setup property grid for RTFP object when constructor is executed or when calibration is loaded.   
% hPG: Handle of the property grid.
% RTFPObj: RTFP object.
if(~isa(RTFPObject,'RTFluorPol'))
    error('Need handle to a property grid and an RTFluorPol Object.');
end

% GenerateFromStruct cannot deal with nested structures.
% Therefore, BoundingBox is removed.
RTFPStruct=ObjPropsToStruct(RTFPObject);
RTFPStruct=rmfield(RTFPStruct,{'BoundingBox'});  

props=PropertyGridField.GenerateFromStruct(RTFPStruct);
    % Microscope properties.

    set(props.FindByName('BlackLevel'),...
        'Type',PropertyType('denserealdouble','scalar',[0 2^16-1]),...
        'DisplayName','BlackLevel',...
        'Category','Microscope',...
        'Description','Intensity without light + specimen dependent isotropic background.');

    set(props.FindByName('PixSize'),...
        'Type',PropertyType('denserealdouble','scalar'),...
        'Category','Microscope',...
        'Description','Size of the pixel in specimen plane (um)');

    set(props.FindByName('Wavelength'),...
        'Type',PropertyType('denserealdouble','scalar'),...
        'Category','Microscope',...
        'Description','Emission wavelength (um)');

    set(props.FindByName('ObjectiveNA'),...
        'Type',PropertyType('denserealdouble','scalar',[0 1.5]),...
        'Category','Microscope',...
        'Description','Imaging NA');

    % Quadrant properties.

    set(props.FindByName('quadHeight'),...
        'Type',PropertyType('denserealdouble','scalar',[1 512]),...
        'Category','Quadrants',...
        'Description','Height of the quadrant in pixels');

    set(props.FindByName('quadWidth'),...
        'Type',PropertyType('denserealdouble','scalar',[1 512]),...
        'Category','Quadrants',...
        'Description','Width of the quadrant in pixels');

    set(props.FindByName('quadTopLeft'),...
        'Type',PropertyType('char','row',{'I0','I45','I90','I135'}),...
        'Category','Quadrants',...
        'Description','The transmission axis of the top-left quadrant');

    set(props.FindByName('quadTopRight'),...
        'Type',PropertyType('char','row',{'I0','I45','I90','I135'}),...
        'Category','Quadrants',...
        'Description','The transmission axis of the top-right quadrant');

    set(props.FindByName('quadBottomLeft'),...
        'Type',PropertyType('char','row',{'I0','I45','I90','I135'}),...
        'Category','Quadrants',...
        'Description','The transmission axis of the bottom-left quadrant');

    set(props.FindByName('quadBottomRight'),...
        'Type',PropertyType('char','row',{'I0','I45','I90','I135'}),...
        'Category','Quadrants',...
        'Description','The transmission axis of the bottom-left quadrant');

    set(props.FindByName('cornerTopLeft'),...
        'Type',PropertyType('denserealdouble','row'),...
        'Category','Quadrants',...
        'Description','(x,y) position of top-left corner of top-left quadrant');


    set(props.FindByName('cornerTopRight'),...
        'Type',PropertyType('denserealdouble','row'),...
        'Category','Quadrants',...
        'Description','(x,y) position of top-left corner of top-right quadrant');


    set(props.FindByName('cornerBottomLeft'),...
        'Type',PropertyType('denserealdouble','row'),...
        'Category','Quadrants',...
        'Description','(x,y) position of top-left corner of bottom-left quadrant');


    set(props.FindByName('cornerBottomRight'),...
        'Type',PropertyType('denserealdouble','row'),...
        'Category','Quadrants',...
        'Description','(x,y) position of top-left corner of bottom-right quadrant');
   
    % Registration properties.

    set(props.FindByName('tformI45'),...
        'Type',PropertyType('denserealdouble','matrix'),...
        'Category','Registration');
    set(props.FindByName('tformI90'),...
        'Type',PropertyType('denserealdouble','matrix'),...
        'Category','Registration');
    set(props.FindByName('tformI135'),...
        'Type',PropertyType('denserealdouble','matrix'),...
        'Category','Registration');  

    % Normalization properties.
    set(props.FindByName('NormI45'),...
        'Type',PropertyType('denserealdouble','matrix'),...
        'Category','Normalization (detection)',...
        'Description','Throughput correction for I45 channel: mean(I45)*NormI45=mean(I0) for unpolarized emission.'); 

    set(props.FindByName('NormI90'),...
        'Type',PropertyType('denserealdouble','matrix'),...
        'Category','Normalization (detection)',...
        'Description','Throughput correction for I90 channel: mean(I45)*NormI90=mean(I0) for unpolarized emission.');            

    set(props.FindByName('NormI135'),...
        'Type',PropertyType('denserealdouble','matrix'),...
        'Category','Normalization (detection)',...
        'Description','Throughput correction for I135 channel: mean(I45)*NormI135=mean(I0) for unpolarized emission.');            

           
    % Pol-calibration.
    set(props.FindByName('ItoSMatrix'),...
        'Type',PropertyType('denserealdouble','matrix'),...
        'Category','Pol-Calibration');   
    
    % Normalization of excitation (per-specimen).
    set(props.FindByName('NormI45ex'),...
        'Type',PropertyType('denserealdouble','scalar',paramsN.normRange),...
        'Category','Normalization (specimen-dependent excitation)',...
        'Description','Correct imbalance in excitation of I45 channel.'); 

    set(props.FindByName('NormI90ex'),...
        'Type',PropertyType('denserealdouble','scalar',paramsN.normRange),...
        'Category','Normalization (specimen-dependent excitation)',...
        'Description','Correct imbalance in excitation of I90 channel.');            

    set(props.FindByName('NormI135ex'),...
        'Type',PropertyType('denserealdouble','scalar',paramsN.normRange),...
        'Category','Normalization (specimen-dependent excitation)',...
        'Description','Correct imbalance in excitation of I135 channel.');            




%     set(props.FindByName('I45Rotation'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.rotRange),...
%         'Category','Registration');
%     set(props.FindByName('I90Rotation'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.rotRange),...
%         'Category','Registration');
%     set(props.FindByName('I135Rotation'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.rotRange),...
%         'Category','Registration');
% 
%     set(props.FindByName('I45xShift'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.shiftRange),...
%         'Category','Registration');
%     set(props.FindByName('I45yShift'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.shiftRange),...
%         'Category','Registration');
%     set(props.FindByName('I90xShift'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.shiftRange),...
%         'Category','Registration');
%     set(props.FindByName('I90yShift'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.shiftRange),...
%         'Category','Registration');
%     set(props.FindByName('I135xShift'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.shiftRange),...
%         'Category','Registration');
%     set(props.FindByName('I135yShift'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.shiftRange),...
%         'Category','Registration');
% 
% 
%     set(props.FindByName('I45xScale'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.scaleRange),...
%         'Category','Registration');
%     set(props.FindByName('I45yScale'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.scaleRange),...
%         'Category','Registration');
%     set(props.FindByName('I90xScale'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.scaleRange),...
%         'Category','Registration');
%     set(props.FindByName('I90yScale'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.scaleRange),...
%         'Category','Registration');
%     set(props.FindByName('I135xScale'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.scaleRange),...
%         'Category','Registration');
%     set(props.FindByName('I135yScale'),...
%         'Type',PropertyType('denserealdouble','scalar',paramsR.scaleRange),...
%         'Category','Registration');          

    
    % Link properties with the object for 1-way update.
    % Binding the properties allows one way update from PropertyGrid to object.
    % After every meaningful event on the UI, I must reload appropriate
    % property values to sync the property editor with the object.
    hPG.Bind(RTFPObject,props);

end    